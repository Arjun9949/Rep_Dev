{
	"name": "DF_SCD_Type_1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob_Customers",
						"type": "DatasetReference"
					},
					"name": "SourceCust"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Customers",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerKey as integer,",
				"          Prefix as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          BirthDate as string,",
				"          MaritalStatus as string,",
				"          Gender as string,",
				"          EmailAddress as string,",
				"          AnnualIncome as string,",
				"          TotalChildren as integer,",
				"          EducationLevel as string,",
				"          Occupation as string,",
				"          HomeOwner as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceCust",
				"derivedColumn1 alterRow(upsertIf(1==1)) ~> alterRow1",
				"SourceCust derive(AnnualIncome = toInteger(replace(AnnualIncome,',',''),'$#')*82.52) ~> derivedColumn1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['CUST_KEY'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CUST_KEY = CustomerKey,",
				"          PREFIX = Prefix,",
				"          FIRST_NAME = FirstName,",
				"          LAST_NAME = LastName,",
				"          BIRTHDATE = BirthDate,",
				"          MARITALSTATUS = MaritalStatus,",
				"          GENDER = Gender,",
				"          EMAIL = EmailAddress,",
				"          ANNUALINCOME = AnnualIncome,",
				"          TOTALCHILDREN = TotalChildren,",
				"          EDUCATIONLEVEL = EducationLevel,",
				"          OCCUPATION = Occupation",
				"     )) ~> sink1"
			]
		}
	}
}