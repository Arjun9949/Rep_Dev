{
	"name": "DF_Scenario_1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "SourceStd"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Gen2_1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_Gen2_1",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          name as string,",
				"          qualification as string,",
				"          passedout_year as integer,",
				"          percentage as integer,",
				"          col_name as string,",
				"          hometown as string,",
				"          age as integer,",
				"          mail_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceStd",
				"SourceStd aggregate(groupBy(Std_Id = id,",
				"          name,",
				"          qualification,",
				"          passedout_year,",
				"          percentage,",
				"          col_name,",
				"          hometown,",
				"          age,",
				"          mail_id),",
				"     Total_Count = count(id)) ~> aggregate1",
				"aggregate1 filter(Total_Count>=2) ~> filter1",
				"filter1 select(mapColumn(",
				"          Std_Id,",
				"          name,",
				"          qualification,",
				"          passedout_year,",
				"          percentage,",
				"          col_name,",
				"          hometown,",
				"          age,",
				"          mail_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"aggregate1 select(mapColumn(",
				"          Std_Id,",
				"          name,",
				"          qualification,",
				"          passedout_year,",
				"          percentage,",
				"          col_name,",
				"          hometown,",
				"          age,",
				"          mail_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Non_Duplicates_db1_Students.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Duplicates_db1_Students.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}